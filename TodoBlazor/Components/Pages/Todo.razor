@page "/todo"
@rendermode InteractiveServer

@using DataLibrary
@using TodoBlazor.Models
@using Microsoft.Extensions.Configuration
@inject IDataAccess _data
@inject IConfiguration _config

<PageTitle>Todo</PageTitle>

<h3>Todo (@todos.Count(todo => !todo.IsDone))</h3>

@if (todoList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ul>
        @foreach (var todo in todoList)
        {
            <li>
                <input type="checkbox" @bind="todo.IsDone" />
                <input @bind="@todo.Title" />
            </li>
        }
    </ul>
}

<input placeholder="Something todo" @bind="newTodo" />
<button @onclick="AddTodo">Add todo</button>

@code {
    List<TodoModel> todoList;

    protected override async Task OnInitializedAsync()
    {
        string sql = "select * from todos";
        todoList = await _data.LoadData<TodoModel, dynamic>(sql, new { }, _config.GetConnectionString("default"));
    }

    private string? newTodo;
    private List<TodoItem> todos = new();

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
        }
    }
}
